<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<!-- 마이 페이지 메인 -->
	<entry key="selectMypageMainWishList">
	<![CDATA[
	        SELECT * FROM(
            SELECT W.PRODUCT_NAME, P.BRAND_NAME, IMG_PATH, IMG_NAME
            FROM WISHLIST W
            JOIN PRODUCT P ON W.PRODUCT_NAME = P.PRODUCT_NAME
            JOIN PRODUCT_IMG PI ON P.PRODUCT_NAME = PI.PRODUCT_NAME
            WHERE USER_ID = ?  AND  IMG_NAME LIKE '%_1.png'
            ORDER BY dbms_random.value
            )
        WHERE ROWNUM<=4
    ]]>
	</entry>
	
	<!-- 내 프로필 정보 -->
	<entry key="myInfoUpdateLoginUser">
		SELECT * FROM MEMBER WHERE USER_ID = ?
	</entry>
	<entry key="myinfoDelete">
		UPDATE MEMBER SET STATUS = 'X' WHERE USER_ID= ?
	</entry>
	<!-- 주소록 -->
	<entry key="addressDefult">
		SELECT * FROM ADDRESS WHERE default_address = 'Y' AND USER_ID = ?
	</entry>
	<entry key="addressList">
		SELECT * FROM ADDRESS WHERE default_address = 'N' AND USER_ID = ?
	</entry>
	<entry key="insertAddress">
		INSERT INTO ADDRESS(ADDRESS_NO, USER_ID, RECEIVER, PHONE, POSTCODE, ADDRESS)
    		VALUES(seq_address_no.nextval, ?, ?, ?, ?, ?)
	</entry>
	<entry key="addressDefaultUpdateY">
		UPDATE ADDRESS SET default_address = 'Y' WHERE ADDRESS_NO = ? AND user_id = ?
	</entry>
	<entry key="addressDefaultUpdateN">
		UPDATE ADDRESS SET default_address = 'N' WHERE default_address = 'Y' AND user_id = ?
	</entry>
	<entry key="addressDelete">
		DELETE FROM ADDRESS WHERE ADDRESS_NO = ? AND USER_ID = ?
	</entry>
	<entry key="addressUpdate">
		UPDATE ADDRESS SET RECEIVER = ?,
                   		   PHONE = ?,
                   		   POSTCODE = ?,
                   		   ADDRESS = ?
       		   		   WHERE ADDRESS_NO = ? AND USER_ID = ?
	</entry>
	
	<!-- 계좌 및 카드 관리 -->
	<entry key="accountSelect">
		SELECT * FROM ACCOUNT WHERE USER_ID = ?
	</entry>
	<entry key="cardSelect">
		SELECT * FROM CARD WHERE USER_ID = ?
	</entry>
	<entry key="accountInsert">
		INSERT INTO ACCOUNT VALUES(?,?,?,?)
	</entry>
	<entry key="accountUpdate">
		UPDATE ACCOUNT SET BANK_NAME = ?,
						   ACCOUNT_NO = ?,
						   ACCOUNT_HOLDER = ?
			   WHERE USER_ID = ?
	</entry>
		<entry key="cardInsert">
		INSERT INTO CARD VALUES(?,?,?,?,?)
	</entry>
	<entry key="cardUpdate">
		UPDATE CARD SET CARD_NO = ?,
						   CARD_PWD = ?,
						   CARD_VALIDITY = ?,
						   CVC = ?
			   WHERE USER_ID = ?
	</entry>
	
	
	<!-- 관심 상품 -->
	<entry key="wishlistList">
		SELECT PRODUCT_NAME, BRAND_NAME, IMG_NAME, IMG_PATH
		FROM WISHLIST W LEFT JOIN PRODUCT P USING(PRODUCT_NAME)
		LEFT JOIN PRODUCT_IMG PI USING(PRODUCT_NAME)
		WHERE USER_ID = ? AND PI.IMG_NAME LIKE '%_1.png%'
	</entry>
	<entry key="wishlistItemDelete">
		DELETE FROM WISHLIST WHERE USER_ID = ? AND PRODUCT_NAME = ?
	</entry>
	
	
	<!-- 장바구니 -->
	<entry key="shoppingCartList">
        SELECT ST.USER_ID AS RESELLER, ST.STOCK_NO, ST.STATUS, C.CART_NO, ST.PRODUCT_NAME, P.BRAND_NAME, ST.PRICE, P_SIZE, CART_COUNT, PI.IMG_PATH, PI.IMG_NAME
        FROM CART C
        LEFT JOIN STOCK ST ON C.STOCK_NO = ST.STOCK_NO
        LEFT JOIN PRODUCT P ON ST.PRODUCT_NAME = P.PRODUCT_NAME
        LEFT JOIN PRODUCT_IMG PI ON P.PRODUCT_NAME = PI.PRODUCT_NAME
        WHERE C.USER_ID = ? AND ST.STATUS IN(1,2) AND IMG_NAME LIKE '%_1.png'
	</entry>
	<entry key="shoppingCartItemDelete">
		DELETE FROM CART WHERE CART_NO = ?
	</entry>
	
	<!-- 주문 결제 거래량 추가안함...-->
	<entry key="stockProdcutSelectList">
		SELECT ST.USER_ID AS RESELLER, ST.STOCK_NO, ST.STATUS, C.CART_NO, ST.PRODUCT_NAME, P.BRAND_NAME, ST.PRICE, P_SIZE, CART_COUNT, PI.IMG_PATH, PI.IMG_NAME
        FROM CART C
        LEFT JOIN STOCK ST ON C.STOCK_NO = ST.STOCK_NO
        LEFT JOIN PRODUCT P ON ST.PRODUCT_NAME = P.PRODUCT_NAME
        LEFT JOIN PRODUCT_IMG PI ON P.PRODUCT_NAME = PI.PRODUCT_NAME
        WHERE C.USER_ID = ? AND ST.STATUS IN(1) AND IMG_NAME LIKE '%_1.png' AND C.CART_NO IN (?)
	</entry>
	<entry key="insertOrder">
		INSERT INTO "ORDER"(ORDER_NO, USER_ID, ADDRESS_NO, TOTAL_AMOUNT, POINT)
			VALUES(SEQ_ORDER_NO.NEXTVAL, ?, ?, ?, ?)
	</entry>
	<entry key="insertOrderProduct">
		INSERT INTO ORDER_PRODUCT(ORDER_PNO, ORDER_NO, STOCK_NO, ORDER_COUNT)
			VALUES(SEQ_ORDER_PNO.NEXTVAL, SEQ_ORDER_NO.CURRVAL, ?, ?)
	</entry>
	
	<entry key="updateStockOrder">
		UPDATE STOCK SET STOCK = STOCK-?, TRADE_COUNT = TRADE_COUNT+? WHERE STOCK_NO = ?
	</entry>
	<entry key="updateMemberPoint">
		UPDATE MEMBER SET TOTAL_POINT = TOTAL_POINT-? WHERE USER_ID = ?
	</entry>
		<entry key="updateAddMemberPoint">
		UPDATE MEMBER SET TOTAL_POINT = TOTAL_POINT+? WHERE USER_ID = ?
	</entry>
	
	<!-- 구매내역 -->
	<entry key="selectBuyListCount">
		SELECT ORDER_NO, ORDER_DATE, TOTAL_AMOUNT, "POINT" FROM "ORDER" WHERE USER_ID = ? ORDER BY ORDER_DATE DESC
	</entry>
	<entry key="selectBuyListInProduct">
        SELECT O.ORDER_NO, OP.ORDER_PNO, ST.PRODUCT_NAME, P.BRAND_NAME, ST.PRICE, ST.P_SIZE, OP.ORDER_COUNT, O.ORDER_DATE, A.POSTCODE, A.ADDRESS, PI.IMG_PATH, PI.IMG_NAME
        FROM STOCK ST
        LEFT JOIN PRODUCT P ON ST.PRODUCT_NAME = P.PRODUCT_NAME
        LEFT JOIN PRODUCT_IMG PI ON P.PRODUCT_NAME = PI.PRODUCT_NAME
        LEFT JOIN ORDER_PRODUCT OP ON ST.STOCK_NO = OP.STOCK_NO
        LEFT JOIN "ORDER" O ON OP.ORDER_NO = O.ORDER_NO
        LEFT JOIN ADDRESS A ON O.ADDRESS_NO = A.ADDRESS_NO
        WHERE O.USER_ID = ? AND IMG_NAME LIKE '%_1.png' AND O.ORDER_NO = ?
	</entry>
	<entry key="selectOrderListMountCount">
		SELECT ORDER_NO, ORDER_DATE, TOTAL_AMOUNT, "POINT" FROM "ORDER" WHERE USER_ID = ? AND ORDER_DATE >= ADD_MONTHS(SYSDATE, -?) ORDER BY ORDER_DATE DESC
	</entry>
	
	<!-- 판매내역 -->
	<entry key="selectsellList">
        SELECT STOCK_NO, S.PRODUCT_NAME, P.BRAND_NAME, PRICE, STOCK, P_SIZE, S.STATUS, TRADE_COUNT , IMG_PATH, IMG_NAME, SUGGEST_DATE
        FROM STOCK S
        JOIN PRODUCT P ON S.PRODUCT_NAME = P.PRODUCT_NAME
        JOIN PRODUCT_IMG PI ON P.PRODUCT_NAME = PI.PRODUCT_NAME
        WHERE USER_ID = ? AND IMG_NAME LIKE '%_1.png'
        ORDER BY SUGGEST_DATE DESC
	</entry>
	<entry key="selectSellMonthList">
        SELECT STOCK_NO, S.PRODUCT_NAME, P.BRAND_NAME, PRICE, STOCK, P_SIZE, S.STATUS, TRADE_COUNT , IMG_PATH, IMG_NAME, SUGGEST_DATE
        FROM STOCK S
        JOIN PRODUCT P ON S.PRODUCT_NAME = P.PRODUCT_NAME
        JOIN PRODUCT_IMG PI ON P.PRODUCT_NAME = PI.PRODUCT_NAME
        WHERE USER_ID = ? AND IMG_NAME LIKE '%_1.png' AND SUGGEST_DATE >= ADD_MONTHS(SYSDATE, -?)
        ORDER BY SUGGEST_DATE DESC
	</entry>
</properties>